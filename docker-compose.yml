services:
  toddric:
    build:
      context: .
      dockerfile: Dockerfile
      # Option A (GPU on Rose): build with CUDA 12.4 torch wheel
      # args:
      #   TORCH_SPEC: "torch --index-url https://download.pytorch.org/whl/cu124"
      # Option B (CPU): comment args above and install CPU torch after start, or:
      # args:
      #   TORCH_SPEC: "torch==2.4.1"
    image: toddric:latest
    container_name: toddric
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      TODDRIC_MODEL_DIR: "${TODDRIC_MODEL_DIR:-/models/toddric-3b-merged-v3-bnb4}"
      TODDRIC_DTYPE: "${TODDRIC_DTYPE:-bf16}"
      TODDRIC_MAX_NEW: "${TODDRIC_MAX_NEW:-200}"
      REPLY_MAX: "${REPLY_MAX:-480}"
      TODDRIC_4BIT: "${TODDRIC_4BIT:-0}"
      TODDRIC_KEY: "${TODDRIC_KEY:-}"
    volumes:
      - ${HOST_MODEL_DIR:-/home/todd/training/ckpts}:/models:ro
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: ["gpu"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://127.0.0.1:8000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5

  # Optional dev tunnel (random URL). For prod: use a named tunnel/systemd.
  cloudflared:
    image: cloudflare/cloudflared:latest
    depends_on:
      toddric:
        condition: service_healthy
    command: tunnel --no-autoupdate --url http://toddric:8000
    restart: unless-stopped

